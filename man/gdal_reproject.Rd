% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gdal_reproject.R
\name{gdal_reproject}
\alias{gdal_reproject}
\title{Reproject and resample a raster}
\usage{
gdal_reproject(infile, outfile, src_proj, tgt_proj, res,
  resampling_method = "near", tgt_extent, buffer, src_nodata,
  datatype = "Float32", return_rast = FALSE, overwrite = TRUE)
}
\arguments{
\item{infile}{Character. File path to a raster file.}

\item{outfile}{Character. Output raster file path.}

\item{src_proj}{Character. The source file coordinate system. Only needs to
be set if you wish to reproject object and it is not specified in the
\code{infile}. The coordinate systems that can be passed includes EPSG
PCS and GCSes (i.e. EPSG:4296), PROJ.4 declarations (as above), or the
name of a .prj file containing well known text. Starting with GDAL 2.2,
if the SRS has an explicit vertical datum that points to a PROJ.4 
geoidgrids, and the input dataset is a single band dataset, a vertical 
correction will be applied to the values of the dataset.}

\item{tgt_proj}{Character. The target coordinate system. See 
\code{src_proj} for details. If not specified, \code{outfile} will
inherit the coordinate system of \code{infile}.}

\item{res}{Numeric vector containing x and y resolution. e.g. 
\code{c(xres, yres)}. Must be specified in the units of 
\code{tgt_proj}.}

\item{resampling_method}{Character. One of \code{"near"}, 
\code{"bilinear"}, \code{"cubic"}, \code{"cubicspline"}, 
\code{"lanczos"}, \code{"average"}, \code{"mode"}, \code{"max"}, 
\code{"min"}, \code{"med"}, \code{"q1"}, \code{"q3"}. See Details. 
Default is \code{"near"}.}

\item{tgt_extent}{Numeric vector containing corner coordinates specified as 
\code{c(xmin, ymin, xmax, ymax)}. Must be specified in the units of 
\code{tgt_proj}.}

\item{buffer}{Numeric. Add buffer (specified in units of \code{tgt_proj}). 
Useful for adding buffers around coasts, and for filling in small gaps 
within raster specified by \code{infile}.}

\item{src_nodata}{Integer. The nodata value for an input file.}

\item{datatype}{A character string indicating the output data type. See the
\href{https://gdal.org/programs/gdalwarp.html}{gdalwarp docs}
for more information.}

\item{return_rast}{Logical. Return \code{RaserLayer} to R?}

\item{overwrite}{Logical. Should \code{outfile} be overwritten if it already
exists?}
}
\value{
_rast A raster file is produced on disk. Additionally, if 
  \code{return_rast} is \code{TRUE} a \code{RasterLayer} object is returned 
  to R.
}
\description{
This function can be used to change resolution, projection and extent of a
raster.
}
\details{
The resampling methods available are as follows:
\itemize{
\item{near: nearest neighbour resampling (default, fastest algorithm, worst
interpolation quality).}
\item{bilinear: bilinear resampling.}
\item{cubic: cubic resampling.}
\item{cubicspline: cubic spline resampling.}
\item{lanczos: Lanczos windowed sinc resampling.}
\item{average: average resampling, computes the average of all non-NODATA
contributing pixels. (GDAL >= 1.10.0).}
\item{mode: mode resampling, selects the value which appears most often of
all the sampled points. (GDAL >= 1.10.0).}
\item{max: maximum resampling, selects the maximum value from all non-NODATA
contributing pixels. (GDAL >= 2.0.0).}
\item{min: minimum resampling, selects the minimum value from all non-NODATA
contributing pixels. (GDAL >= 2.0.0).}
\item{med: median resampling, selects the median value of all non-NODATA
contributing pixels. (GDAL >= 2.0.0).}
\item{q1: first quartile resampling, selects the first quartile value of all
non-NODATA contributing pixels. (GDAL >= 2.0.0).}
\item{q3: third quartile resampling, selects the third quartile value of all
non-NODATA contributing pixels. (GDAL >= 2.0.0).}
}
}
